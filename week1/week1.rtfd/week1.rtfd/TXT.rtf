{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Consolas;\f2\froman\fcharset0 Times-Roman;
}
{\colortbl;\red255\green255\blue255;\red19\green8\blue105;\red249\green249\blue249;\red0\green0\blue0;
\red106\green128\blue31;\red50\green91\blue142;\red83\green83\blue83;\red13\green95\blue24;}
{\*\expandedcolortbl;;\cssrgb\c9804\c9020\c48627;\cssrgb\c98039\c98039\c98039;\cssrgb\c0\c0\c0;
\cssrgb\c49020\c56471\c16078;\cssrgb\c25098\c43922\c62745;\cssrgb\c40000\c40000\c40000;\cssrgb\c0\c43922\c12549;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Install Node.js\
\
Download the latest version\
\
Check version node -v (check if installed correctly or not)\
\
Mistype nodee -v \
\
Visual studio code alternatives atom, sublime text, web storm\
\
What is Nodejs?\
Javascript only run in the browser -> run as a standalone process on your machine\
Limited to what browser allowed it to do -> more like a general purpose programming language\
\
Click event to a button, redirect to a different page -> web servers that can access the file system and connect to databases\
\
Instead of being forced to run it on the client -> run javascript code on the server\
\
Nodejs is a javascript runtime built on Chrome\'92s v8 JS engine. V8 is a Google open source project.\
JS engine, takes JS code complies it to machine code that your machine can execute.\
\
V8 is written in C++. Chrome and Nodejs are largely written in C++. \
Nodejs is not a programming language. It provides custom functionality with functions and objects. \
Both chrome and Nodejs create their own modified version of javascript. The same javascript language but with custom functions and objects injected.\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 Chrome and Nodejs pass the js code to V8 and get the results back.\
\
\
In console (global, process) and chrome (window, document)\
2+3\
\'91Can\'94.toUpperCase()\
\
Nodejs extends javascript functionality by providing C++ bindings. To do anything that C++ can do such as accessing the file system.\
\
Why Nodejs?\
Nodejs is an event driven non-blocking IO model that makes it lightweight and efficient\
IO is input output and your app uses IO to communicate with the outside world (with the machine it\'92s running on (file system) or a remote server)\
\
Non-blocking - when the application is waiting for a response, it can do other things (process other code make other requests, etc.) \
Non-blocking because it would be a bad experience otherwise. When the data is being fetched, the user could not click links or buttons.\
Those operations run in the background both on Nodejs and browser.\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 Event driven is registering callbacks and having them call when the IO operation is done.\
\
npm is the largest open source ecosystem. npm is already installed with nodejs. You can search available packages on the npm website.\
\
\pard\pardeftab720\sa240\partightenfactor0

\f1\fs29\fsmilli14667 \cf2 \cb3 \expnd0\expndtw0\kerning0
console\cf4 .\cf5 log\cf4 (\cf6 'Hello Node.js!'\cf4 ) 
\f0\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
\pard\pardeftab720\sa240\partightenfactor0

\f1\fs29\fsmilli14667 \cf4 \expnd0\expndtw0\kerning0
node index.js 
\f2\fs24 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0 \cf0 \kerning1\expnd0\expndtw0 Importing core modules\
\
\pard\pardeftab720\sa240\partightenfactor0

\f1\fs29\fsmilli14667 \cf2 \cb3 \expnd0\expndtw0\kerning0
fs\cf4 .\cf5 writeFileSync\cf4 (\cf6 'notes.txt'\cf7 \cb3 , \cf6 \cb3 'I live in Bursa\'92\cf4 ) 
\f2\fs24 \cb1 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0 \cf0 \kerning1\expnd0\expndtw0 Error!\
\
\pard\pardeftab720\sa240\partightenfactor0

\f1\fs29\fsmilli14667 \cf8 \cb3 \expnd0\expndtw0\kerning0
const \cf4 \cb3 fs \cf7 \cb3 = \cf5 \cb3 require\cf4 (\cf6 'fs'\cf4 )\cb1 \uc0\u8232 
\f2\fs24 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0 \cf0 \kerning1\expnd0\expndtw0 Fs can be changed. No output. Check the file. \
\
\pard\pardeftab720\sa240\partightenfactor0

\f1\fs29\fsmilli14667 \cf2 \cb3 \expnd0\expndtw0\kerning0
fs\cf4 .\cf5 writeFileSync\cf4 (\cf6 'notes.txt'\cf7 , \cf6 'I am Can\'92\cf4 ) 
\f2\fs24 \cb1 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0 \cf0 \kerning1\expnd0\expndtw0 Rerun the code. The file is overwritten. \
Append a message?\
\
\pard\pardeftab720\sa240\partightenfactor0

\f1\fs29\fsmilli14667 \cf2 \cb3 \expnd0\expndtw0\kerning0
fs\cf4 .\cf5 appendFileSync\cf4 (\cf6 'notes.txt'\cf7 , \cf6 ' I live in Bursa\'92\cf4 ) 
\f2\fs24 \cb1 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0 \cf0 \kerning1\expnd0\expndtw0 Run the script. Open the file.\
\
Importing your own files.\
\
Whe the project gets bigger, create multiple files to stay organized.\
Delete the code.\
\
const name = 'Can' \
console.log(name)\
\
Run the script.\
Create a new file. utils.js under notes-app\
console.log(\'91utils.js\'92)\
Run the script. Utils is not printed.\
\
Add require(\'91./utils.js\'92) at the top of app.js\
Save and rerun. Require is at the top and printed earlier.\
\
Now define a function.\
\
Remove name variable from app.js, define it in the utils.\
\
const name = \'91cem\'92\
\
Error. Name is not defined. All files have their own scope.\
To access, export it in utils.\
\
module.exports = name\
\
\uc0\u304 n app.js\
const name = require(\'91./utils.js\'92)\
Variable name can be different.\
\
Now export a function in utils\
\
const add = function (a,b) \{return a+b\} \
Module.exports = add\
\
Change name to add in app.js\
const add = require(\'91./utils.js\'92)\
Const sum = add(4,-2)\
Console.log(sum)\
\
Rerun the script.\
\
Challenge!\
Define a new file called note.js\
Create get notes function, export it\
From app.js, call the function.\
\
const getNotes = function () \{return \'91your notes \'85\'92\}\
module.exports = getNotes\
\
\uc0\u304 n app.js\
Delete/comment earlier codes\
\
const getNotes = require(\'91./notes.js\'92)\
const msg = getNotes()\
console.log(msg)\
\
Remove utils.js now.\
\
Importing npm modules\
\
Initialize npm\
Run at the root level. \
node -v\
npm -v (greater than 5!)\
npm init (create configuration file. Accept default values). Most of the values are for those who create npm packages. It creates a package.json configuration file. \
JSON is javascript object notation. Invalid if remove double quotes.\
\
Data validation does not make my app unique. Do not reinvent the wheel and focus on the app functionality. Validates email address, url, etc.\
\
Install the data validator.\
npm install validator@\
\
Updated package.json dependencies. Created node_modules folder and package-lock.json file. Do not alter these files.\
\
Go to app.js Add the second require.\
const validator = require(\'91validator\'92)\
\
console.log(validator.isEmail(\'91can@btu.edu\'92))\
Run the app. node app.js\
Remove @ and run again.\
\
console.log(validator.isURL(\'91www.btu.edu\'92))\
Run again.\
\
Node-modules folder is missing if downloaded from a repository. To try, delete this folder. In this case, run, npm install Packages to be installed are determined according to the package.json configuration file.\
\
Install chalk module. Chalk prints custom colored text.\
npm -i chalk \
\
Remove validator library from the app.js and load it. Then print success in green.\
const chalk = require(\'92chalk\'92)\
console.log(chalk.green.bold(\'91Success!\'92))\
\
Try chalk.bold.green(\'91Success!\'92)\
Try chalk.bold.inverse.green(\'91Success!\'92)\
\
Global npm modules. Up to here we used local modules. When we install globally, it gives us access to a new command from the terminal. It is not changing the project files. Not in the dependency list.\
\
npm install nodemon -g\
\
In case of an error, try sudo! Or run as admin.\
\
nodemon -v\
\
Run the script as follows:\
nodemon app.js\
\
Change the code from success to error and green to red.\
\
Use ctrl C to quit.\
\
\
\
\
\
 \
}